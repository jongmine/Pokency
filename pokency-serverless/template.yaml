AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  pokency-serverless

  Sample SAM Template for pokency-serverless

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  GetPokemonFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getPokemonFunction
      CodeUri: functions/pokemon/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Description: Return data of a Pokémon from PokéAPI
      MemorySize: 128
      Timeout: 10
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        GetPokemon:
          Type: Api
          Properties:
            Path: /pokemon/{name}
            Method: get
        GetPokemonList:
          Type: Api
          Properties:
            Path: /pokemon
            Method: get
        GetPokemonEvolution:
          Type: Api
          Properties:
            Path: /pokemon/{name}/evolution
            Method: get
        GetPokemonMoves:
          Type: Api
          Properties:
            Path: /pokemon/{name}/moves
            Method: get
        GetPokemonAbilities:
          Type: Api
          Properties:
            Path: /pokemon/{name}/abilities
            Method: get
        GetTypeEffectiveness:
          Type: Api
          Properties:
            Path: /battle/type-effectiveness
            Method: get
        StartBattle:
          Type: Api
          Properties:
            Path: /battle/start
            Method: post

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
Outputs:
  GetPokemonApi:
    Description: API Gateway endpoint URL for Prod stage for GetPokemon function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/pokemon/pikachu"
  GetPokemonFunction:
    Description: GetPokemon Lambda Function ARN
    Value: !GetAtt GetPokemonFunction.Arn
  GetPokemonFunctionIamRole:
    Description: Implicit IAM Role created for GetPokemon function
    Value: !GetAtt GetPokemonFunctionRole.Arn
  StartBattleApi:
    Description: API Gateway endpoint URL for Prod stage for StartBattle function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/battle/start"
